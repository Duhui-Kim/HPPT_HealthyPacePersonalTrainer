package com.diet.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.diet.model.dto.User;
import com.diet.service.UserService;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private UserService userService;

	@PostMapping("/login")
	public ResponseEntity<String> login(@RequestBody User user) {
		HttpHeaders headers = new HttpHeaders();
		
		// header에 JWT 담기
		headers.set("Authorization", userService.login(user));
		
		// Vue에서 Authorization이 보이도록 전달
		headers.set("Access-Control-Expose-Headers", "Authorization, Content-type");
		
		headers.set("Content-Type", "text/plain;charset=UTF-8");
		
		// 로그인 성공 메시지 전달
		return new ResponseEntity<String> ("로그인 성공", headers, HttpStatus.OK);	
	}
	
	@PostMapping("/join")
	public ResponseEntity<String> join(@RequestBody User user) {
		String msg = userService.join(user);
		
		// 아이디가 중복일 경우 Fail
		if(msg.equals("FAIL")) {
			return new ResponseEntity<String> (msg, HttpStatus.IM_USED);
		}
		// 중복이 아닐 경우 성공
		else {
			return new ResponseEntity<String> (msg, HttpStatus.OK);		
		}
	}
}
